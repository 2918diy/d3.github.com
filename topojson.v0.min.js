topojson=function(){function e(e,t){function n(t){var n=e.arcs[t],r=n[0],a=[0,0];return n.forEach(function(e){a[0]+=e[0],a[1]+=e[1]}),[r,a]}var r={},a={},o={};t.forEach(function(e){var t=n(e);(r[t[0]]||(r[t[0]]=[])).push(e),(r[t[1]]||(r[t[1]]=[])).push(~e)}),t.forEach(function(e){var t,r,s=n(e),i=s[0],c=s[1];if(t=o[i])if(delete o[t.end],t.push(e),t.end=c,r=a[c]){delete a[r.start];var u=r===t?t:t.concat(r);a[u.start=t.start]=o[u.end=r.end]=u}else if(r=o[c]){delete a[r.start],delete o[r.end];var u=t.concat(r.map(function(e){return~e}).reverse());a[u.start=t.start]=o[u.end=r.start]=u}else a[t.start]=o[t.end]=t;else if(t=a[c])if(delete a[t.start],t.unshift(e),t.start=i,r=o[i]){delete o[r.end];var f=r===t?t:r.concat(t);a[f.start=r.start]=o[f.end=t.end]=f}else if(r=a[i]){delete a[r.start],delete o[r.end];var f=r.map(function(e){return~e}).reverse().concat(t);a[f.start=r.end]=o[f.end=t.end]=f}else a[t.start]=o[t.end]=t;else if(t=a[i])if(delete a[t.start],t.unshift(~e),t.start=c,r=o[c]){delete o[r.end];var f=r===t?t:r.concat(t);a[f.start=r.start]=o[f.end=t.end]=f}else if(r=a[c]){delete a[r.start],delete o[r.end];var f=r.map(function(e){return~e}).reverse().concat(t);a[f.start=r.end]=o[f.end=t.end]=f}else a[t.start]=o[t.end]=t;else if(t=o[c])if(delete o[t.end],t.push(~e),t.end=i,r=o[i]){delete a[r.start];var u=r===t?t:t.concat(r);a[u.start=t.start]=o[u.end=r.end]=u}else if(r=a[i]){delete a[r.start],delete o[r.end];var u=t.concat(r.map(function(e){return~e}).reverse());a[u.start=t.start]=o[u.end=r.start]=u}else a[t.start]=o[t.end]=t;else t=[e],a[t.start=i]=o[t.end=c]=t});var s=[];for(var i in o)s.push(o[i]);return s}function t(t,r,a){function o(e){0>e&&(e=~e),(l[e]||(l[e]=[])).push(f)}function s(e){e.forEach(o)}function i(e){e.forEach(s)}function c(e){f=e,d[e.type](e.arcs)}var u=[];if(arguments.length>1){var f,l=[],d={LineString:s,MultiLineString:i,Polygon:i,MultiPolygon:function(e){e.forEach(i)}};if("GeometryCollection"===r.type?r.geometries.forEach(c):c(r),3>arguments.length)for(var h in l)u.push([h]);else for(var h in l)a((f=l[h])[0],f[f.length-1])&&u.push([h])}else for(var h=0,p=t.arcs.length;p>h;++h)u.push([h]);return n(t,{type:"MultiLineString",arcs:e(t,u)})}function n(e,t){function n(e,t){t.length&&t.pop();for(var n,a=d[0>e?~e:e],o=0,s=a.length,i=0,h=0;s>o;++o)t.push([(i+=(n=a[o])[0])*c+f,(h+=n[1])*u+l]);0>e&&r(t,s)}function a(e){for(var t=[],r=0,a=e.length;a>r;++r)n(e[r],t);return t}function o(e){return e.map(a)}function s(e){return e=Object.create(e),e.coordinates=h[e.type](e.arcs),e}var i=e.transform,c=i.scale[0],u=i.scale[1],f=i.translate[0],l=i.translate[1],d=e.arcs,h={LineString:a,MultiLineString:o,Polygon:o,MultiPolygon:function(e){return e.map(o)}};return"GeometryCollection"===t.type?(t=Object.create(t),t.geometries=t.geometries.map(s),t):s(t)}function r(e,t){for(var n,r=e.length,a=r-t;--r>a;)n=e[a],e[a++]=e[r],e[r]=n}function a(e,t){function n(e,t){for(var n,r=0,a=e.length;a>r;++r)0>(n=e[r])&&(n=~n),o[n].push(t)}function r(e,t){e.forEach(function(e){n(e,t)})}function a(e,t){s[e.type](e.arcs,t)}var o=e.arcs.map(function(){return[]}),s={LineString:n,MultiLineString:r,Polygon:r,MultiPolygon:function(e,t){e.forEach(function(e){r(e,t)})}};t.forEach(a);var i=t.map(function(){return[]});return o.forEach(function(e){2>e.length||(i[e[0]].push(t[e[1]]),i[e[1]].push(t[e[0]]))}),i}return{version:"0.0.4",mesh:t,object:n,neighbors:a}}();