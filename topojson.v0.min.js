topojson=function(){function e(e,t){function n(t){var n=e.arcs[t],r=n[0],a=[0,0];return n.forEach(function(e){a[0]+=e[0],a[1]+=e[1]}),[r,a]}var r={},a={},s={};t.forEach(function(e){var t=n(e);(r[t[0]]||(r[t[0]]=[])).push(e),(r[t[1]]||(r[t[1]]=[])).push(~e)}),t.forEach(function(e){var t,r,o=n(e),i=o[0],c=o[1];if(t=s[i])if(delete s[t.end],t.push(e),t.end=c,r=a[c]){delete a[r.start];var l=r===t?t:t.concat(r);a[l.start=t.start]=s[l.end=r.end]=l}else if(r=s[c]){delete a[r.start],delete s[r.end];var l=t.concat(r.map(function(e){return~e}).reverse());a[l.start=t.start]=s[l.end=r.start]=l}else a[t.start]=s[t.end]=t;else if(t=a[c])if(delete a[t.start],t.unshift(e),t.start=i,r=s[i]){delete s[r.end];var u=r===t?t:r.concat(t);a[u.start=r.start]=s[u.end=t.end]=u}else if(r=a[i]){delete a[r.start],delete s[r.end];var u=r.map(function(e){return~e}).reverse().concat(t);a[u.start=r.end]=s[u.end=t.end]=u}else a[t.start]=s[t.end]=t;else if(t=a[i])if(delete a[t.start],t.unshift(~e),t.start=c,r=s[c]){delete s[r.end];var u=r===t?t:r.concat(t);a[u.start=r.start]=s[u.end=t.end]=u}else if(r=a[c]){delete a[r.start],delete s[r.end];var u=r.map(function(e){return~e}).reverse().concat(t);a[u.start=r.end]=s[u.end=t.end]=u}else a[t.start]=s[t.end]=t;else if(t=s[c])if(delete s[t.end],t.push(~e),t.end=i,r=s[i]){delete a[r.start];var l=r===t?t:t.concat(r);a[l.start=t.start]=s[l.end=r.end]=l}else if(r=a[i]){delete a[r.start],delete s[r.end];var l=t.concat(r.map(function(e){return~e}).reverse());a[l.start=t.start]=s[l.end=r.start]=l}else a[t.start]=s[t.end]=t;else t=[e],a[t.start=i]=s[t.end=c]=t});var o=[];for(var i in s)o.push(s[i]);return o}function t(t,r,a){function s(e){0>e&&(e=~e),(f[e]||(f[e]=[])).push(u)}function o(e){e.forEach(s)}function i(e){e.forEach(o)}function c(e){u=e,d[e.type](e.arcs)}var l=[];if(arguments.length>1){var u,f=[],d={LineString:o,MultiLineString:i,Polygon:i,MultiPolygon:function(e){e.forEach(i)}};if("GeometryCollection"===r.type?r.geometries.forEach(c):c(r),3>arguments.length)for(var h in f)l.push([h]);else for(var h in f)a((u=f[h])[0],u[u.length-1])&&l.push([h])}else for(var h=0,v=t.arcs.length;v>h;++h)l.push([h]);return n(t,{type:"MultiLineString",arcs:e(t,l)})}function n(e,t){function n(e,t){t.length&&t.pop();for(var n,a=d[0>e?~e:e],s=0,o=a.length,i=0,h=0;o>s;++s)t.push([(i+=(n=a[s])[0])*c+u,(h+=n[1])*l+f]);0>e&&r(t,o)}function a(e){for(var t=[],r=0,a=e.length;a>r;++r)n(e[r],t);return t}function s(e){return e.map(a)}function o(e){return e=Object.create(e),e.coordinates=h[e.type](e.arcs),e}var i=e.transform,c=i.scale[0],l=i.scale[1],u=i.translate[0],f=i.translate[1],d=e.arcs,h={LineString:a,MultiLineString:s,Polygon:s,MultiPolygon:function(e){return e.map(s)}};return"GeometryCollection"===t.type?(t=Object.create(t),t.geometries=t.geometries.map(o),t):o(t)}function r(e,t){for(var n,r=e.length,a=r-t;--r>a;)n=e[a],e[a++]=e[r],e[r]=n}return{version:"0.0.3",mesh:t,object:n}}();